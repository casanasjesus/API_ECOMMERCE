@using BlazorClientApp.Dtos
@using BlazorClientApp.Services

@page "/orders"
@inject IOrderApiService OrderService

<h3>Orders</h3>

@if (orders is null)
{
    <p><em>Cargando...</em></p>
}

else if (!orders.Any())
{
    <div class="alert alert-warning">No hay órdenes registradas.</div>
}

else
{
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Fecha</th>
                <th>Cliente</th>
                <th>Status</th>
                <th>Dirección</th>
                <th>Items</th>
                <th class="text-end">Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var o in orders)
            {
                <tr>
                    <td>@o.OrderId</td>
                    <td>@(o.OrderDate == DateTime.MinValue ? "-" : o.OrderDate.ToString("dd/MM/yyyy HH:mm"))</td>
                    <td>@($"{o.Customer.Name} {o.Customer.LastName}")</td>
                    <td>@o.OrderStatus</td>
                    <td>@($"{o.OrderAddress.Street} {o.OrderAddress.Number}, {o.OrderAddress.City}")</td>
                    <td style="min-width:220px;">
                        <ul class="mb-0 ps-3">
                            @foreach (var it in o.OrderItems)
                            {
                                <li>
                                    @it.ProductName &nbsp;
                                    <small class="text-muted">x @it.Amount</small>
                                    <div><small>@(it.UnitPrice.ToString("C"))  —  Sub: @(it.SubTotal.ToString("C"))</small></div>
                                </li>
                            }
                        </ul>
                    </td>
                    <td class="text-end fw-bold">@o.TotalOrder.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<OrderListDto>? orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await OrderService.GetOrdersList();
    }
}
