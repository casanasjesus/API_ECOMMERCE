@using BlazorClientApp.Dtos
@using BlazorClientApp.Services

@page "/create-customer"
@inject ICustomerApiService CustomerService

<h3>Create Customer</h3>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input id="name" class="form-control" @bind="customer.Name" />
            </div>

            <div class="mb-3">
                <label for="lastName" class="form-label">Last Name</label>
                <input id="lastName" class="form-control" @bind="customer.LastName" />
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input id="email" type="email" class="form-control" @bind="customer.Email" />
            </div>

            <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <input id="address" class="form-control" @bind="customer.Address" />
            </div>

            <div class="mb-3">
                <label for="dateRegister" class="form-label">Date Register</label>
                <input id="dateRegister" type="date" class="form-control"
                       @bind="customer.DateRegister"
                       @bind:format="yyyy-MM-dd" />
            </div>

            <button type="button" class="btn btn-primary" @onclick="HandleSubmit">
                Create Customer
            </button>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert alert-info mt-3">@message</div>
            }
        </div>
    </div>
</div>

@code {
    private CreateCustomerDto customer = new CreateCustomerDto
    {
        DateRegister = DateTime.Now
    };

    private string message = "";

    public async Task HandleSubmit()
    {
        try
        {
            var response = await CustomerService.CreateCustomer(customer);

            if (response.IsSuccessStatusCode)
            {
                message = "Customer created successfully!";
                customer = new CreateCustomerDto { DateRegister = DateTime.Now };
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                message = $"Error {response.StatusCode}: {error}";
            }
        }
        catch (Exception ex)
        {
            message = $"Exception: {ex.Message}";
        }
    }
}
