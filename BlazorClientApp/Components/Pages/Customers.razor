@using BlazorClientApp.Dtos

@page "/customers"
@inject BlazorClientApp.Services.ICustomerApiService CustomerService
@inject IJSRuntime JS

<h3>Customers</h3>

@if (customers is null)
{
    <p><em>Cargando...</em></p>
}

else if (!customers.Any())
{
    <div class="alert alert-warning">No hay clientes registrados.</div>
}

else
{
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th>Dirección</th>
                <th>Fecha Registro</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in customers)
            {
                <tr>
                    <td>@c.Id</td>
                    <td>@c.Name</td>
                    <td>@c.LastName</td>
                    <td>@c.Email</td>
                    <td>@c.Address</td>
                    <td>@c.DateRegister.ToString("dd/MM/yyyy")</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteCustomer(c.Id)">
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CustomerDto>? customers;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        customers = await CustomerService.GetCustomersList();
    }

    private async Task DeleteCustomer(int id)
    {
        var confirmed = await JS.InvokeAsync<bool>("confirm", $"¿Seguro que deseas eliminar el cliente con ID {id}?");
        if (!confirmed) return;

        var response = await CustomerService.DeleteCustomer(id);

        if (response.IsSuccessStatusCode)
        {
            message = "Cliente eliminado correctamente.";
            customers = await CustomerService.GetCustomersList();
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            message = $"Error {response.StatusCode}: {error}";
        }
    }
}

