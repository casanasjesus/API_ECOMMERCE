@using BlazorClientApp.Dtos
@using BlazorClientApp.Services

@page "/create-product"
@inject IProductApiService ProductService

<h3>Create Product</h3>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">

            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <input id="name" class="form-control" @bind="product.Name" />
            </div>

            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea id="description" class="form-control" @bind="product.Description"></textarea>
            </div>

            <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input id="price" type="number" step="0.01" class="form-control" @bind="product.Price" />
            </div>

            <div class="mb-3">
                <label for="stock" class="form-label">Stock</label>
                <input id="stock" type="number" class="form-control" @bind="product.Stock" />
            </div>

            <button type="button" class="btn btn-primary" @onclick="HandleSubmit">
                Create Product
            </button>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert alert-info mt-3">@message</div>
            }
        </div>
    </div>
</div>

@code {
    private CreateProductDto product = new CreateProductDto();
    private string message = "";

    private async Task HandleSubmit()
    {
        try
        {
            var response = await ProductService.CreateProduct(product);

            if (response.IsSuccessStatusCode)
            {
                message = "Product created successfully!";
                product = new CreateProductDto(); // limpia el form
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                message = $"Error {response.StatusCode}: {error}";
            }
        }
        catch (Exception ex)
        {
            message = $"Exception: {ex.Message}";
        }
    }
}
